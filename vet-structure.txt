File: src/app/components/main-website/blog/vet/vet-blog-detail/vet-blog-detail.component.css

File: src/app/components/main-website/blog/vet/vet-blog-detail/vet-blog-detail.component.html
<p>vet-blog-detail works!</p>

File: src/app/components/main-website/blog/vet/vet-blog-detail/vet-blog-detail.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-vet-blog-detail',
  imports: [],
  templateUrl: './vet-blog-detail.component.html',
  styleUrl: './vet-blog-detail.component.css'
})
export class VetBlogDetailComponent {

}

File: src/app/components/main-website/blog/vet/vet-blog-add/vet-blog-add.component.ts
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, FormArray, FormControl, ReactiveFormsModule } from '@angular/forms';
import { BlogService } from '../../../../../services/blog.service';
import { ToastrService } from 'ngx-toastr';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-vet-blog-add',
  imports: [CommonModule, ReactiveFormsModule],
  templateUrl: './vet-blog-add.component.html',
  styleUrls: ['./vet-blog-add.component.css']
})
export class VetBlogAddComponent implements OnInit {
  form!: FormGroup;
  selectedFiles: File[] = [];
  imagePreviews: string[] = [];

  constructor(
    private fb: FormBuilder,
    private blogService: BlogService,
    private toastr: ToastrService
  ) {}

  ngOnInit(): void {
    this.form = this.fb.group({
      titles: this.fb.array([this.fb.control('')]),
      content: [''],
    });
  }

  get titles(): FormArray<FormControl<string | null>> {
    return this.form.get('titles') as FormArray<FormControl<string | null>>;
  }

  addTitle(): void {
    this.titles.push(new FormControl(''));
  }

  removeTitle(index: number): void {
    if (this.titles.length > 1) {
      this.titles.removeAt(index);
    }
  }

  onImageSelected(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (!input.files) return;

    this.selectedFiles = Array.from(input.files);
    this.imagePreviews = [];

    for (let file of this.selectedFiles) {
      const reader = new FileReader();
      reader.onload = () => {
        this.imagePreviews.push(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  }

  submitPost(): void {
    const blogPost = {
      titles: this.form.value.titles,
      content: this.form.value.content,
      images: this.selectedFiles,
    };

    this.blogService.createPost(blogPost).subscribe({
      next: () => {
        this.toastr.success('Post published successfully!');
        this.form.reset();
        this.imagePreviews = [];
        this.selectedFiles = [];
        this.form.setControl('titles', this.fb.array([this.fb.control('')]));
      },
      error: () => {
        this.toastr.error('Failed to publish post.');
      }
    });
  }
}
File: src/app/components/main-website/blog/vet/vet-blog-add/vet-blog-add.component.html
<div class="card">
  <h2 class="card-title">Add New Post (Vet)</h2>

  <!-- حلقة عبر الـ titles.controls وربط كل عنصر مع formControl -->
  <div *ngFor="let title of titles.controls; let i = index" class="mb-2">
    <input class="input-field" [formControl]="title" placeholder="Title #{{ i + 1 }}">
    <button *ngIf="titles.length > 1" class="btn btn-outline mt-1" (click)="removeTitle(i)">Remove</button>
  </div>
  
  <button class="btn btn-secondary mt-2 mb-3" (click)="addTitle()">+ Add Another Title</button>

  <label class="strong mb-1">Content</label>
  <textarea class="input-field mb-3" rows="5" formControlName="content" placeholder="Write post content..."></textarea>

  <label class="strong mb-1">Upload Images</label>
  <input type="file" multiple class="mb-3" (change)="onImageSelected($event)">

  <div class="mb-3 preview-container">
    <img *ngFor="let img of imagePreviews" [src]="img" class="preview-img">
  </div>

  <button class="btn btn-primary" (click)="submitPost()">Publish Post</button>
</div>

File: src/app/components/main-website/blog/vet/vet-blog-add/vet-blog-add.component.css
.card {
  background: #ffffff;
  padding: 24px;
  border-radius: 16px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  max-width: 700px;
  margin: auto;
}

.card-title {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 20px;
}

.input-field {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ddd;
  border-radius: 10px;
  font-size: 16px;
  margin-bottom: 10px;
}

.strong {
  font-weight: 600;
  display: block;
}

.btn {
  padding: 8px 16px;
  border: none;
  border-radius: 10px;
  font-size: 15px;
  cursor: pointer;
}

.btn-primary {
  background-color: #3b82f6;
  color: #fff;
}

.btn-secondary {
  background-color: #e2e8f0;
  color: #000;
}

.btn-outline {
  background: transparent;
  border: 1px solid #ccc;
  color: #333;
  padding: 5px 12px;
  margin-top: 5px;
  margin-left: 5px;
  border-radius: 8px;
}

.preview-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.preview-img {
  height: 120px;
  border-radius: 10px;
  object-fit: cover;
}

File: src/app/components/main-website/blog/vet/vet-blog-list/vet-blog-list.component.ts
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Router, RouterModule } from '@angular/router';
import { HeaderComponent } from '../../../header/header.component';
import { FooterComponent } from '../../../footer/footer.component';

@Component({
  selector: 'app-vet-blog-list',
  standalone: true,
  imports: [CommonModule, RouterModule, HeaderComponent, FooterComponent],
  templateUrl: './vet-blog-list.component.html',
  styleUrls: ['./vet-blog-list.component.css'],
})
export class VetBlogListComponent implements OnInit {
  vetBlogPosts = [
    { id: 1, title: 'Pet Care Tips', content: 'Tips for vet care...', date: new Date() },
    { id: 2, title: 'Vet Blog 2', content: 'Another vet blog...', date: new Date('2025-03-15') },
  ]; // داتا مؤقتة

  constructor(private router: Router) {}

  ngOnInit(): void {
    // هنا هتجيبي الداتا من API لما تربطي الـ backend
  }

  viewPost(postId: number) {
    this.router.navigate(['/blog/vet', postId]);
  }
}
File: src/app/components/main-website/blog/vet/vet-blog-list/vet-blog-list.component.html
<app-header></app-header>

<div class="blog-container">
  <div class="blog-header">
    <h2>Vet Blogs</h2>
    <button class="btn " routerLink="/blog/vet/add">Add New Vet Blog</button>
  </div>

  <div class="blogs-grid">
    <div *ngFor="let post of vetBlogPosts" class="blog-card" (click)="viewPost(post.id)">
      <h3>{{ post.title }}</h3>
      <p class="date">{{ post.date | date:'mediumDate' }}</p>
      <p>{{ post.content | slice:0:100 }}...</p>
    </div>
  </div>

  <div *ngIf="vetBlogPosts.length === 0" class="no-posts">
    <p>No vet blog posts available yet.</p>
  </div>
</div>

<app-footer></app-footer>
File: src/app/components/main-website/blog/vet/vet-blog-list/vet-blog-list.component.css
.blog-container {
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .blog-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }
  
  .blogs-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }
  
  .blog-card {
    background: var(--white);
    border-radius: 10px;
    padding: 1.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    cursor: pointer;
    transition: transform 0.3s ease;
  }
  
  .blog-card:hover {
    transform: translateY(-5px);
  }
  
  .blog-card h3 {
    margin-bottom: 0.5rem;
  }
  
  .date {
    font-size: var(--text-sm);
    color: var(--dark-gray);
    margin-bottom: 0.5rem;
  }
  
  .no-posts {
    text-align: center;
    color: var(--dark-gray);
  }
  .btn {
    background-color: #3498db; /* لون ثابت بدل var(--blue) */
    color: #ffffff; /* لون ثابت بدل var(--white) */
    padding: 0.5rem 1rem;
    border-radius: 5px;
    text-decoration: none;
    transition: background-color 0.3s ease;
    border: none; /* علشان يكون زي زرار عادي */
    cursor: pointer; /* علشان يبقى واضح إنه قابل للضغط */
    margin-top: 100px;
  }
